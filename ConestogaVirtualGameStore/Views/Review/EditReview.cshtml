@model ReviewModel
@{
}
<div class="container">
    <dl class="row">

        <dt class="col">
            @Html.Raw("Review Status: ")
        </dt>
        <dd class="col-sm-10 justify-content-start">
            @if(Model.IsApproved){
                @Html.Raw("Approved");
            }
            else{
                @Html.Raw("Pending Evaluation");
            }
        </dd>
        <dt class="col">
            @Html.DisplayNameFor(model => model.DateTime)
        </dt>
        <dd class="col-sm-10 justify-content-start">
            @Html.DisplayFor(model => model.DateTime)
        </dd>

    </dl>
</div>

<div class="container">

    <form asp-action="EditReview" method="post" style="display:inline">
        <div asp-validation-summary="All" class="text-danger"></div>
        <input type="hidden" asp-for="UserId" />
        <input type="hidden" asp-for="GameId" />
        <div class="form-group">
            <label asp-for="ReviewText" class="control-label"></label>
            <textarea asp-for="ReviewText" rows="6" cols="100" class="form-control"></textarea>
            <span asp-validation-for="ReviewText" class="text-danger"></span>
        </div>

        <input type="submit" value="Save Changes" id="btnSave" class="btn btn-primary" />

    </form>

    <form asp-action="DeleteReview" style="display:inline">
        <input type="hidden" asp-for="UserId" />
        <input type="hidden" asp-for="GameId" />
        <input type="submit" value="Delete" id="btnDelete" class="btn btn-danger" />
        <a asp-controller="Home" asp-action="GameDetails" asp-route-id="@ViewBag.EditBackUrl" class="btn btn-secondary">Back to Game Details</a>
    </form>
    
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
